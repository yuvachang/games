{"version":3,"sources":["Menu/Menu.js","App/Routes.js","App/Home.js","Minesweeper/Timer.js","firebase.js","Minesweeper/Leaderboard.js","data/profanity.js","Minesweeper/AddTimeToDB.js","Minesweeper/Minesweeper.js","App/App.js","serviceWorker.js","index.js"],"names":["Menu","react_default","a","createElement","className","react_router_dom","to","Routes","react_router","render","path","component","Minesweeper","from","Home","Timer","state","start","seconds","minutes","timer","status","startTimer","_callee2","currentTimer","regenerator_default","wrap","_context2","prev","next","_this","timerInterval","abrupt","setInterval","Object","asyncToGenerator","mark","_callee","_context","Date","now","Math","floor","concat","String","padStart","toFixed","setState","stop","sent","clearInterval","pauseTimer","_callee3","_context3","clearTimer","this","Component","firestore","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Leaderboard","topFive","getData","timesGet","data","collection","get","forEach","qSnap","push","Promise","all","sort","b","Number","test","slice","t0","console","error","componentDidMount","onSnapshot","_ref3","querySnapshot","_x","apply","arguments","unsubscribeListener","componentWillUnmount","style","textAlign","marginBottom","length","map","score","key","random","name","time","size","profanity","AddTimeToDB","addTime","nameInput","value","includes","add","props","log","showLeaderBoard","_this2","type","ref","node","placeholder","onClick","mineCount","flagCount","board","started","ended","victory","holdLeft","holdRight","releaseTime","createBoard","selectedSize","_ref2","i","j","canvas","addEventListener","onMouseUp","onMouseDown","mine","flag","open","neighborMines","pos","highlighted","setMines","neighborPos","randomize","rowOrCol","mines","row","col","setNeighborCounts","n","getNeighborCells","includeSelf","neighborCells","neighborFlags","k","p","ensureSafeFirstClick","_this$getNeighborCell2","cell","cascade","openNeighborCells","_this$getNeighborCell4","openCell","openAllMines","countOpenCells","opened","emptyCells","openedCells","flagRemainingMines","countFlags","setFlag","highlightNeighborCells","highlightTimeout","window","clearTimeout","elid","abs","document","getElementById","classList","remove","setTimeout","clearAllHighlights","mouseOver","e","clickedCellPos","target","JSON","parse","getAttribute","removeEventListener","button","flagStatus","prevState","_callee4","_this$state","_context4","clearBoard","startOver","_this$state2","Minesweeper_Leaderboard","onContextMenu","preventDefault","alt","src","Minesweeper_Timer","Minesweeper_AddTimeToDB","rowIdx","colIdx","id","cellpos","App","Menu_Menu","React","Boolean","location","hostname","match","ReactDOM","src_App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8deafb7d.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction Menu() {\n  return (\n    <div className='menu'>\n      <Link to='/minesweeper'>\n        Minesweeper\n      </Link>\n    </div>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {\n  // Home,\n  Minesweeper,\n} from '../components'\n\nexport default function Routes() {\n  return (\n    <Route\n      render={() => (\n        <Switch>\n          {/* <Route exact path='/' component={Home} /> */}\n          <Route path='/minesweeper' component={Minesweeper} />\n          <Redirect from='/' to='/minesweeper' component={() => null} />\n          <Redirect from='*' to='/' component={() => null} />\n        </Switch>\n      )}\n    />\n  )\n}\n","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n     this is your home page\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react'\n\nclass Timer extends Component {\n  state = {\n    start: 0,\n    seconds: 0,\n    minutes: 0,\n    timer: '00:00.0',\n    status: 'clear',\n  }\n\n  startTimer = async () => {\n    // prevent duplicate interval if timer already running\n    if (this.timerInterval && this.timerInterval !== 'cleared') {\n      return\n    }\n    const currentTimer = this.state.seconds + this.state.minutes * 60\n\n    this.timerInterval = await setInterval(async () => {\n      const start = this.state.start || Date.now()\n\n      let seconds = (Date.now() - start) / 1000 + currentTimer\n      const minutes = Math.floor(seconds / 60)\n      seconds = seconds - minutes * 60\n      const timer = `${String(minutes).padStart(2, '0')}:${seconds.toFixed(1).padStart(4, '0')}`\n\n      await this.setState({\n        start,\n        seconds,\n        minutes,\n        timer,\n      })\n    }, 100)\n  }\n\n  clearInterval = () => {\n    clearInterval(this.timerInterval)\n    this.timerInterval = 'cleared'\n  }\n\n  pauseTimer = async () => {\n    this.clearInterval()\n\n    this.setState({\n      start: 0,\n    })\n  }\n\n  clearTimer = () => {\n    this.clearInterval()\n    this.setState({\n      start: 0,\n      seconds: 0,\n      minutes: 0,\n      timer: '00:00.0',\n    })\n  }\n\n  componentWillUnmount() {\n    this.clearTimer()\n  }\n\n  render() {\n    const { timer } = this.state\n    return (\n      <div className='counter'>\n        <h3>Time:</h3> <h3>{timer}</h3>\n      </div>\n    )\n  }\n}\n\nexport default Timer\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nconst firebaseApp = Firebase.initializeApp({\n  apiKey: 'AIzaSyCdF0zX81MHnA9nUv44AZMY7z7Za0c5MCI',\n  authDomain: 'games-ff915.firebaseapp.com',\n  databaseURL: 'https://games-ff915.firebaseio.com',\n  projectId: 'games-ff915',\n  storageBucket: '',\n  messagingSenderId: '308063716684',\n  appId: '1:308063716684:web:f02f93626362a544',\n})\n\nconst firestore = firebaseApp.firestore()\n\nexport { firestore }\n","import React, { Component } from 'react'\nimport { firestore } from '../firebase'\n\nclass Leaderboard extends Component {\n  state = {\n    topFive: [],\n  }\n\n  getData = async () => {\n    try {\n      const timesGet = await firestore.collection('minesweeper').get()\n      const data = []\n      await timesGet.forEach(qSnap => {\n        data.push(qSnap.data())\n      })\n      let topFive = await Promise.all(data)\n      topFive = topFive.sort((a, b) => (Number(a.test) > Number(b.test) ? 1 : -1)).slice(0, 5)\n      this.setState({ topFive })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  componentDidMount = async () => {\n    this.unsubscribeListener = await firestore.collection('minesweeper').onSnapshot(async querySnapshot => {\n      this.getData()\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.unsubscribeListener()\n  }\n\n  render() {\n    const { topFive } = this.state\n    return (\n      <div className='leaderboard'>\n        <h4 style={{ textAlign: 'center', marginBottom: '4px' }}>Top 5 times:</h4>\n\n        {!!topFive.length ? (\n          topFive.map(score => {\n            return (\n              <div className='score' key={Math.random() * 999}>\n                <div>{score.name}: &nbsp;</div>\n                <div style={{ textAlign: 'right' }}>\n                  {score.time.toFixed(1)} seconds on {score.size[0] === 8 ? 'Easy' : score.size[0] === 16 ? 'Medium' : 'Hard'}.\n                </div>\n              </div>\n            )\n          })\n        ) : (\n          <div className='score' key={Math.random() * 999}>\n            There are no scores yet!\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Leaderboard\n","const profanity =  [\"4r5e\", \"5h1t\", \"5hit\", \"a55\", \"anal\", \"anus\", \"ar5e\", \"arrse\", \"arse\", \"ass\", \"ass-fucker\", \"asses\", \"assfucker\", \"assfukka\", \"asshole\", \"assholes\", \"asswhole\", \"a_s_s\", \"b!tch\", \"b00bs\", \"b17ch\", \"b1tch\", \"ballbag\", \"balls\", \"ballsack\", \"bastard\", \"beastial\", \"beastiality\", \"bellend\", \"bestial\", \"bestiality\", \"bi+ch\", \"biatch\", \"bitch\", \"bitcher\", \"bitchers\", \"bitches\", \"bitchin\", \"bitching\", \"bloody\", \"blow job\", \"blowjob\", \"blowjobs\", \"boiolas\", \"bollock\", \"bollok\", \"boner\", \"boob\", \"boobs\", \"booobs\", \"boooobs\", \"booooobs\", \"booooooobs\", \"breasts\", \"buceta\", \"bugger\", \"bum\", \"bunny fucker\", \"butt\", \"butthole\", \"buttmuch\", \"buttplug\", \"c0ck\", \"c0cksucker\", \"carpet muncher\", \"cawk\", \"chink\", \"cipa\", \"cl1t\", \"clit\", \"clitoris\", \"clits\", \"cnut\", \"cock\", \"cock-sucker\", \"cockface\", \"cockhead\", \"cockmunch\", \"cockmuncher\", \"cocks\", \"cocksuck\", \"cocksucked\", \"cocksucker\", \"cocksucking\", \"cocksucks\", \"cocksuka\", \"cocksukka\", \"cok\", \"cokmuncher\", \"coksucka\", \"coon\", \"cox\", \"crap\", \"cum\", \"cummer\", \"cumming\", \"cums\", \"cumshot\", \"cunilingus\", \"cunillingus\", \"cunnilingus\", \"cunt\", \"cuntlick\", \"cuntlicker\", \"cuntlicking\", \"cunts\", \"cyalis\", \"cyberfuc\", \"cyberfuck\", \"cyberfucked\", \"cyberfucker\", \"cyberfuckers\", \"cyberfucking\", \"d1ck\", \"damn\", \"dick\", \"dickhead\", \"dildo\", \"dildos\", \"dink\", \"dinks\", \"dirsa\", \"dlck\", \"dog-fucker\", \"doggin\", \"dogging\", \"donkeyribber\", \"doosh\", \"duche\", \"dyke\", \"ejaculate\", \"ejaculated\", \"ejaculates\", \"ejaculating\", \"ejaculatings\", \"ejaculation\", \"ejakulate\", \"f u c k\", \"f u c k e r\", \"f4nny\", \"fag\", \"fagging\", \"faggitt\", \"faggot\", \"faggs\", \"fagot\", \"fagots\", \"fags\", \"fanny\", \"fannyflaps\", \"fannyfucker\", \"fanyy\", \"fatass\", \"fcuk\", \"fcuker\", \"fcuking\", \"feck\", \"fecker\", \"felching\", \"fellate\", \"fellatio\", \"fingerfuck\", \"fingerfucked\", \"fingerfucker\", \"fingerfuckers\", \"fingerfucking\", \"fingerfucks\", \"fistfuck\", \"fistfucked\", \"fistfucker\", \"fistfuckers\", \"fistfucking\", \"fistfuckings\", \"fistfucks\", \"flange\", \"fook\", \"fooker\", \"fuck\", \"fucka\", \"fucked\", \"fucker\", \"fuckers\", \"fuckhead\", \"fuckheads\", \"fuckin\", \"fucking\", \"fuckings\", \"fuckingshitmotherfucker\", \"fuckme\", \"fucks\", \"fuckwhit\", \"fuckwit\", \"fudge packer\", \"fudgepacker\", \"fuk\", \"fuker\", \"fukker\", \"fukkin\", \"fuks\", \"fukwhit\", \"fukwit\", \"fux\", \"fux0r\", \"f_u_c_k\", \"gangbang\", \"gangbanged\", \"gangbangs\", \"gaylord\", \"gaysex\", \"goatse\", \"God\", \"god-dam\", \"god-damned\", \"goddamn\", \"goddamned\", \"hardcoresex\", \"hell\", \"heshe\", \"hoar\", \"hoare\", \"hoer\", \"homo\", \"hore\", \"horniest\", \"horny\", \"hotsex\", \"jack-off\", \"jackoff\", \"jap\", \"jerk-off\", \"jism\", \"jiz\", \"jizm\", \"jizz\", \"kawk\", \"knob\", \"knobead\", \"knobed\", \"knobend\", \"knobhead\", \"knobjocky\", \"knobjokey\", \"kock\", \"kondum\", \"kondums\", \"kum\", \"kummer\", \"kumming\", \"kums\", \"kunilingus\", \"l3i+ch\", \"l3itch\", \"labia\", \"lust\", \"lusting\", \"m0f0\", \"m0fo\", \"m45terbate\", \"ma5terb8\", \"ma5terbate\", \"masochist\", \"master-bate\", \"masterb8\", \"masterbat*\", \"masterbat3\", \"masterbate\", \"masterbation\", \"masterbations\", \"masturbate\", \"mo-fo\", \"mof0\", \"mofo\", \"mothafuck\", \"mothafucka\", \"mothafuckas\", \"mothafuckaz\", \"mothafucked\", \"mothafucker\", \"mothafuckers\", \"mothafuckin\", \"mothafucking\", \"mothafuckings\", \"mothafucks\", \"mother fucker\", \"motherfuck\", \"motherfucked\", \"motherfucker\", \"motherfuckers\", \"motherfuckin\", \"motherfucking\", \"motherfuckings\", \"motherfuckka\", \"motherfucks\", \"muff\", \"mutha\", \"muthafecker\", \"muthafuckker\", \"muther\", \"mutherfucker\", \"n1gga\", \"n1gger\", \"nazi\", \"nigg3r\", \"nigg4h\", \"nigga\", \"niggah\", \"niggas\", \"niggaz\", \"nigger\", \"niggers\", \"nob\", \"nob jokey\", \"nobhead\", \"nobjocky\", \"nobjokey\", \"numbnuts\", \"nutsack\", \"orgasim\", \"orgasims\", \"orgasm\", \"orgasms\", \"p0rn\", \"pawn\", \"pecker\", \"penis\", \"penisfucker\", \"phonesex\", \"phuck\", \"phuk\", \"phuked\", \"phuking\", \"phukked\", \"phukking\", \"phuks\", \"phuq\", \"pigfucker\", \"pimpis\", \"piss\", \"pissed\", \"pisser\", \"pissers\", \"pisses\", \"pissflaps\", \"pissin\", \"pissing\", \"pissoff\", \"poop\", \"porn\", \"porno\", \"pornography\", \"pornos\", \"prick\", \"pricks\", \"pron\", \"pube\", \"pusse\", \"pussi\", \"pussies\", \"pussy\", \"pussys\", \"rectum\", \"retard\", \"rimjaw\", \"rimming\", \"s hit\", \"s.o.b.\", \"sadist\", \"schlong\", \"screwing\", \"scroat\", \"scrote\", \"scrotum\", \"semen\", \"sex\", \"sh!+\", \"sh!t\", \"sh1t\", \"shag\", \"shagger\", \"shaggin\", \"shagging\", \"shemale\", \"shi+\", \"shit\", \"shitdick\", \"shite\", \"shited\", \"shitey\", \"shitfuck\", \"shitfull\", \"shithead\", \"shiting\", \"shitings\", \"shits\", \"shitted\", \"shitter\", \"shitters\", \"shitting\", \"shittings\", \"shitty\", \"skank\", \"slut\", \"sluts\", \"smegma\", \"smut\", \"snatch\", \"son-of-a-bitch\", \"spac\", \"spunk\", \"s_h_i_t\", \"t1tt1e5\", \"t1tties\", \"teets\", \"teez\", \"testical\", \"testicle\", \"tit\", \"titfuck\", \"tits\", \"titt\", \"tittie5\", \"tittiefucker\", \"titties\", \"tittyfuck\", \"tittywank\", \"titwank\", \"tosser\", \"turd\", \"tw4t\", \"twat\", \"twathead\", \"twatty\", \"twunt\", \"twunter\", \"v14gra\", \"v1gra\", \"vagina\", \"viagra\", \"vulva\", \"w00se\", \"wang\", \"wank\", \"wanker\", \"wanky\", \"whoar\", \"whore\", \"willies\", \"willy\", \"xrated\", \"xxx\"];\n\nexport default profanity","import React, { Component } from 'react'\nimport { firestore } from '../firebase'\nimport profanity from '../data/profanity'\n\nclass AddTimeToDB extends Component {\n  state = {\n    error: '',\n  }\n\n  addTime = async () => {\n    let name = this.nameInput.value\n    if (!name.length) {\n      return\n    }\n\n    if (profanity.includes(name)) {\n      await this.setState({\n        error: 'Please try a friendlier name!',\n      })\n    } else {\n      try {\n        await firestore.collection('minesweeper').add({\n          name,\n          time: this.props.time,\n          size: this.props.size,\n        })\n        console.log('submitted')\n        this.props.showLeaderBoard()\n      } catch (error) {\n        console.error(error)\n        this.setState({\n          error: 'Server error.',\n        })\n      }\n    }\n  }\n\n  componentDidMount = async () => {}\n\n  render() {\n    const { error } = this.state\n    return (\n      <div className='add-to-db'>\n        <div className='input'>\n          <input type='text' ref={node => (this.nameInput = node)} placeholder='Your name' />\n          <button onClick={this.addTime}>Submit</button>\n        </div>\n        {error && <div className='error'>{error}</div>}\n      </div>\n    )\n  }\n}\n\nexport default AddTimeToDB\n","import React, { Component } from 'react'\nimport Timer from './Timer'\nimport Leaderboard from './Leaderboard'\nimport AddTimeToDB from './AddTimeToDB'\n\nclass Minesweeper extends Component {\n  state = {\n    size: [],\n    mineCount: 0,\n    flagCount: 0,\n    board: [],\n    started: false, //mines set, board layout set\n    ended: false,\n    victory: false,\n\n    showLeaderBoard: false,\n\n    holdLeft: false,\n    holdRight: false,\n    releaseTime: 0,\n  }\n\n  // TODO:\n  //x## SET FLAGS\n  //x## PREVENT OPEN CELL IF HAS FLAG%3>0\n  //x## R+LMB OPEN NEIGHBORS IF FLAG NUMBERS MATCH NEIGHBORMINES\n  //x#### this.openNeighbors function, open all neighbors except flagged\n  //x###### if empty && !neighborMines, this.cascade()\n  //x## END GAME IF MINE IS OPENED\n  //x#### End game sequence, blow all mines.\n  //x## FLAG COUNTER VS TOTAL MINE COUNT\n  //x## WIN :: ALL EMPTY CELLS OPENED\n  //x#### Condition: all empty cells opened regardless of flags.\n\n  createBoard = async selectedSize => {\n    // Add event listeners on board creation.\n    this.canvas.addEventListener('mouseup', this.onMouseUp)\n    this.canvas.addEventListener('mousedown', this.onMouseDown)\n\n    let [size, mineCount, board] = [this.state.size || 0, this.state.mineCount || 0, []]\n\n    // Determine board size/game difficulty selected.\n    if (!selectedSize && !this.state.size.length) return\n    if (selectedSize === 'small') {\n      size = [8, 8]\n      mineCount = 10\n    } else if (selectedSize === 'medium') {\n      size = [16, 16]\n      mineCount = 40\n    } else if (selectedSize === 'large') {\n      size = [24, 24]\n      mineCount = 99\n    }\n\n    // Initialize board arrays.\n    for (let i = 0; i < size[0]; i++) {\n      board[i] = []\n      for (let j = 0; j < size[1]; j++) {\n        // Set cell objects.\n        board[i].push({\n          mine: 0,\n          flag: 0,\n          open: 0,\n          neighborMines: 0,\n          pos: [i, j],\n          highlighted: 0,\n        })\n      }\n    }\n\n    // Set mines after board initialized.\n    // ## (board is passed by reference, reference updated and return not required)\n    this.setMines(size, mineCount, board)\n\n    console.log('Board initialized =>', board)\n\n    await this.setState({\n      size,\n      mineCount,\n      board,\n    })\n  }\n\n  setMines = (size, mineCount, board, neighborPos) => {\n    // Function: Generate random integer within 0-row/col.length range.\n    const randomize = rowOrCol => Math.floor(Math.random() * rowOrCol)\n\n    let mines = 0\n\n    while (mines < mineCount) {\n      // Get random row and column within xy range of board.\n      let row = randomize(size[0])\n      let col = randomize(size[1])\n      let pos = String(row).padStart(2, '0') + String(col).padStart(2, '0')\n\n      // Avoid setting mines on 9 cell block.\n      if (neighborPos) {\n        if (neighborPos.includes(pos)) continue\n      }\n\n      // Skip cell if mine already exists on cell.\n      if (board[row][col].mine === 1) continue\n\n      // Set mine.\n      board[row][col].mine = 1\n      mines++\n    }\n\n    // After setting mines, set neighborCounts of mines for each cell.\n    this.setNeighborCounts(board)\n\n    // // ## Uncomment to count total mines.\n    // let totalmines = 0\n    // board.forEach(row=> {\n    //   row.forEach(cell=>{\n    //     if (cell.mine){totalmines+=1}\n    //   })\n    // })\n    // console.log(totalmines)\n    // // ##\n  }\n\n  setNeighborCounts = board => {\n    // Count mines in neighboring cells for each cell on board.\n    for (let i = 0, n = board.length; i < n; i++) {\n      for (let j = 0, n = board[i].length; j < n; j++) {\n        const { neighborMines } = this.getNeighborCells(i, j, 0, board)\n        board[i][j].neighborMines = neighborMines\n      }\n    }\n  }\n\n  getNeighborCells = (i, j, includeSelf, board) => {\n    const neighborCells = []\n    const neighborPos = []\n    let neighborMines = 0\n    let neighborFlags = 0\n\n    // Return 8 or 9 cell block around center point i&j.\n    for (let k = -1; k <= 1; k++) {\n      for (let p = -1; p <= 1; p++) {\n        if (i + k >= 0 && i + k < board.length && j + p >= 0 && j + p < board[i].length) {\n          if (!includeSelf && (k === 0 && p === 0)) continue\n          neighborCells.push(board[i + k][j + p])\n          neighborPos.push(`${String(i + k).padStart(2, '0')}${String(j + p).padStart(2, '0')}`)\n          neighborMines += board[i + k][j + p].mine\n          if (board[i + k][j + p].flag % 3 === 1) {\n            neighborFlags++\n          }\n        }\n      }\n    }\n\n    return { neighborPos, neighborCells, neighborMines, neighborFlags }\n  }\n\n  ensureSafeFirstClick = (i, j, board) => {\n    const { neighborCells, neighborPos } = this.getNeighborCells(i, j, 1, board)\n    let mineCount = 0\n\n    // Count mines around clicked cell including the cell.\n    neighborCells.forEach(cell => {\n      if (board[cell.pos[0]][cell.pos[1]].mine) {\n        board[cell.pos[0]][cell.pos[1]].mine = 0\n\n        mineCount++\n      }\n    })\n\n    // Move mines from 9 cell block around clicked cell to rest of board.\n    this.setMines(this.state.size, mineCount, board, neighborPos)\n  }\n\n  cascade = (i, j, board) => {\n    const { neighborCells } = this.getNeighborCells(i, j, 0, board)\n\n    neighborCells.forEach(cell => {\n      const row = cell.pos[0]\n      const col = cell.pos[1]\n\n      // Base case: cell has neighborMines && not already open.\n      if (!!board[row][col].neighborMines) {\n        if (!board[row][col].open) {\n          board[row][col].open = 1\n        }\n      } else if (!board[row][col].neighborMines) {\n        // Recurse if cell not open && has no neighborMines.\n        if (!board[row][col].open) {\n          board[row][col].open = 1\n          this.cascade(row, col, board)\n        }\n      }\n    })\n  }\n\n  openNeighborCells = (i, j, board) => {\n    const cell = board[i][j]\n    const { neighborFlags, neighborCells } = this.getNeighborCells(i, j, 0, board)\n\n    if (neighborFlags === cell.neighborMines) {\n      neighborCells.forEach(cell => {\n        if (cell.flag % 3 === 0 && !cell.open) {\n          this.openCell(cell.pos[0], cell.pos[1], board)\n        }\n      })\n    }\n  }\n\n  openAllMines = board => {\n    board.forEach(row => {\n      row.forEach(cell => {\n        if (cell.mine) {\n          board[cell.pos[0]][cell.pos[1]].open = 1\n        }\n      })\n    })\n  }\n\n  countOpenCells = board => {\n    let opened = 0\n    board.forEach(row => {\n      row.forEach(cell => {\n        if (cell.open) {\n          opened++\n        }\n      })\n    })\n    return opened\n  }\n\n  openCell = async (i, j, board) => {\n    if (this.state.ended || board[i][j].open) return\n\n    // If cell is first cell open, make sure first click is on empty cascading cell.\n    if (!this.state.started) {\n      this.ensureSafeFirstClick(i, j, board)\n    }\n\n    // If timer is paused or uninitialized, start timer.\n    if (!this.timer.state.start) {\n      this.timer.startTimer()\n    }\n\n    const cell = board[i][j]\n    // Open cell.\n    board[i][j].open = 1\n\n    // If opened cell has 0 mines and 0 neighborMines, cascade.\n    if (cell.neighborMines === 0 && !cell.mine) {\n      this.cascade(i, j, board)\n    }\n\n    const emptyCells = this.state.size[0] * this.state.size[1] - this.state.mineCount\n    const openedCells = this.countOpenCells(board)\n\n    // End game if a mine is opened.\n    let ended = this.state.ended\n    let victory = this.state.victory\n    if (cell.mine) {\n      ended = true\n      this.openAllMines(board)\n    }\n\n    // End and win game if all empty cells opened.\n    else if (openedCells === emptyCells) {\n      ended = true\n      victory = true\n      // Set flags on remaining mines to mark mines.\n      this.flagRemainingMines(board)\n    }\n\n    // Stop timer if game ends.\n    if (ended) {\n      this.timer.pauseTimer()\n    }\n\n    await this.setState({\n      board,\n      ended,\n      victory,\n      started: true,\n    })\n  }\n\n  flagRemainingMines = board => {\n    board.forEach(row => {\n      row.forEach(cell => {\n        if (cell.mine) {\n          cell.flag = 1\n        }\n      })\n    })\n  }\n\n  countFlags = board => {\n    let flagCount = 0\n    board.forEach(row => {\n      row.forEach(cell => {\n        if (cell.flag % 3 === 1) {\n          flagCount++\n        }\n      })\n    })\n    return flagCount\n  }\n\n  setFlag = (i, j, board) => {\n    if (!board[i][j].open && this.state.started) {\n      board[i][j].flag++\n\n      const flagCount = this.countFlags(board)\n\n      this.setState({ board, flagCount })\n    }\n  }\n\n  highlightNeighborCells = (i, j) => {\n    if (this.highlightTimeout) {\n      window.clearTimeout(this.highlightTimeout)\n    }\n\n    let highlighted = []\n\n    for (let k = -2; k <= 2; k++) {\n      for (let p = -2; p <= 2; p++) {\n        if (i + k >= 0 && i + k < this.state.board.length && j + p >= 0 && j + p < this.state.board[i].length) {\n          if (k === 0 && p === 0) continue\n          const elid = `${String(i + k).padStart(2, '0')}${String(j + p).padStart(2, '0')}`\n          if (Math.abs(p) === 2 || Math.abs(k) === 2) {\n            document.getElementById(elid).classList.remove('highlighted')\n          } else {\n            const cell = this.state.board[i + k][j + p]\n            if (cell.flag % 3 === 0 && !cell.open) {\n              document.getElementById(elid).classList.add('highlighted')\n              highlighted.push(elid)\n            }\n          }\n        }\n      }\n    }\n\n    this.highlightTimeout = window.setTimeout(() => {\n      this.clearAllHighlights(highlighted)\n    }, 5)\n  }\n\n  clearAllHighlights = highlighted => {\n    this.state.board.forEach(row => {\n      row.forEach(cell => {\n        const elid = `${String(cell.pos[0]).padStart(2, '0')}${String(cell.pos[1]).padStart(2, '0')}`\n        if (highlighted && !highlighted.includes(elid)) {\n          document.getElementById(elid).classList.remove('highlighted')\n        } else if (!highlighted) {\n          document.getElementById(elid).classList.remove('highlighted')\n        }\n      })\n    })\n  }\n\n  mouseOver = async e => {\n    if (!e.target.className.includes('cell')) {\n      this.clearAllHighlights()\n      return\n    }\n    let clickedCellPos = JSON.parse(e.target.getAttribute('cellpos'))\n    let i = Number(clickedCellPos[0])\n    let j = Number(clickedCellPos[1])\n\n    this.highlightNeighborCells(i, j)\n  }\n\n  onMouseUp = e => {\n    this.clearAllHighlights()\n    this.canvas.removeEventListener('mouseover', this.mouseOver)\n\n    // ## If mouse released outside of board, avoid board logic.\n    if (!e.target.className.includes('cell')) {\n      if (e.button === 0) {\n        // LMB up.\n        this.setState(prevState => {\n          if (prevState.holdLeft) {\n            return {\n              holdLeft: false,\n              releaseTime: Date.now(),\n            }\n          }\n        })\n      } else if (e.button === 2) {\n        this.setState({\n          holdRight: false,\n          releaseTime: Date.now(),\n        })\n      }\n      return\n    }\n    // ## If mouse released outside of board, avoid board logic.\n\n    const board = this.state.board\n    let clickedCellPos = JSON.parse(e.target.getAttribute('cellpos'))\n    let i = Number(clickedCellPos[0])\n    let j = Number(clickedCellPos[1])\n    const cell = board[i][j]\n    console.log(i, j, e.target)\n\n    if (Date.now() - this.state.releaseTime < 50) {\n      // L+RMB up.\n\n      // Open neighborCells if:\n      // 1) Game has started.\n      // 2) Clicked cell is open already.\n      // 3) NeighborFlagCount===cell.neighborMines.\n      // 3a) Unopened neighbor count === cell.neighborMines.\n      if (cell.open) {\n        this.openNeighborCells(i, j, board)\n      }\n\n      this.setState({\n        holdLeft: false,\n        holdRight: false,\n      })\n    } else if (e.button === 0) {\n      // this.setState({\n      //   victory: true,\n      // })\n      // return\n\n      // LMB up.\n\n      // Open cell if:\n      // 1) LMB up on cell,\n      // 2) Cell isn't already open,\n      // 3) RMB isn't pressed,\n      if (e.target.className.includes('cell')) {\n        let flagStatus = cell.flag % 3\n        if (!cell.open && !this.state.holdRight && flagStatus === 0) {\n          this.openCell(i, j, board)\n        }\n      }\n\n      this.setState({\n        holdLeft: false,\n        releaseTime: Date.now(),\n      })\n    } else if (e.button === 2) {\n      // RMB up.\n\n      // Increment cell.flag if:\n      // 1) RMB up on cell,\n      // 2) LMB isn't pressed,\n      if (!this.state.holdLeft) {\n        // Set flag on cell.\n        if (!this.timer.state.start && this.state.started && !this.state.ended) {\n          this.timer.startTimer()\n        }\n        if (!this.state.ended) {\n          this.setFlag(i, j, board)\n        }\n      }\n\n      this.setState({\n        // board,\n        holdRight: false,\n        releaseTime: Date.now(),\n      })\n    }\n  }\n\n  onMouseDown = async e => {\n    // trigger hover class for board\n    if (e.button === 0) {\n      // LEFT BUTTON DOWN\n      // left click: hover only individual cells\n      await this.setState({\n        holdLeft: true,\n      })\n    } else if (e.button === 2) {\n      // RIGHT BUTTON DOWN\n      await this.setState({\n        holdRight: true,\n      })\n    }\n\n    const { holdLeft, holdRight } = this.state\n    if (holdLeft && holdRight) {\n      // highlight surrounding cells\n      // trigger highlight function for this cell, mouseOver initiates for cells mouseOver'd after this cell\n      this.mouseOver(e)\n      this.canvas.addEventListener('mouseover', this.mouseOver)\n    }\n  }\n\n  clearBoard = () => {\n    console.log('Clearing board.')\n\n    this.canvas.removeEventListener('mouseup', this.onMouseUp)\n    this.canvas.removeEventListener('mousedown', this.onMouseDown)\n\n    this.setState({\n      size: [],\n      mineCount: 0,\n      board: [],\n      started: false,\n      ended: false,\n      victory: false,\n      showLeaderBoard: false,\n    })\n  }\n\n  startOver = () => {\n    this.createBoard()\n    this.timer.clearTimer()\n    this.setState({\n      started: false,\n      ended: false,\n      victory: false,\n      showLeaderBoard: false,\n    })\n  }\n\n  showLeaderBoard = () => {\n    this.setState({\n      showLeaderBoard: true,\n    })\n  }\n\n  componentWillUnmount() {\n    this.canvas.removeEventListener('mouseup', this.onMouseUp)\n    this.canvas.removeEventListener('mousedown', this.onMouseDown)\n  }\n\n  render() {\n    const { size, board, started, holdLeft, ended, victory, showLeaderBoard, mineCount, flagCount } = this.state\n    return (\n      <div className='minesweeper-container' ref={node => (this.canvas = node)}>\n        {/* SELECT DIFFICULTY */}\n        {!size.length && (\n          <div className='select-board'>\n            <Leaderboard />\n            <button onClick={() => this.createBoard('small')}>Easy (8x8)</button>\n            <button onClick={() => this.createBoard('medium')}>Medium (16x16)</button>\n            <button onClick={() => this.createBoard('large')}>Hard (30x30)</button>\n          </div>\n        )}\n\n        {/* BOARD SIZE SELECTED */}\n        {!!size.length && (\n          <div\n            className='canvas'\n            onContextMenu={e => {\n              e.preventDefault()\n              return false\n            }}>\n            <div className='minesweeper-menu'>\n              <div className='buttons'>\n                <button onClick={this.clearBoard}>\n                  {/* Change Difficulty */}\n                  <img alt='back' src='icons/back.svg' className='icon' />\n                </button>\n                <button className={`${started && !ended ? '' : 'hidden'}`} onClick={this.timer ? this.timer.pauseTimer : null}>\n                  {/* Pause Timer */}\n                  <img alt='pause' src='icons/pause.svg' className='icon' />\n                </button>\n                <button className={`${started ? '' : 'hidden'}`} onClick={this.startOver}>\n                  {/* Start Over */}\n                  <img alt='reset' src='icons/reset.svg' className='icon' />\n                </button>\n              </div>\n\n              <div className='counter'>\n                <h3> Mines:</h3> <h3>{mineCount}</h3>\n              </div>\n              <div className='counter'>\n                <h3>Flags:</h3>\n                <h3>{flagCount}</h3>\n              </div>\n              <Timer ref={node => (this.timer = node)} />\n            </div>\n            <div className='board'>\n              {showLeaderBoard && (\n                <div className='game-end-overlay'>\n                  <Leaderboard />\n                </div>\n              )}\n              {victory && !showLeaderBoard && (\n                <div className='game-end-overlay'>\n                  <h3>You won in</h3>\n                  <h3>{this.timer.state.seconds.toFixed(1)} seconds!</h3>\n                  <AddTimeToDB time={this.timer.state.seconds} showLeaderBoard={this.showLeaderBoard} size={size}/>\n                </div>\n              )}\n              {ended && !victory && (\n                <div className='game-end-overlay'>\n                  <h3>You lost in </h3>\n                  <h3>{this.timer.state.seconds.toFixed(1)} seconds!</h3>\n                </div>\n              )}\n\n              {board.map((row, rowIdx) => {\n                return (\n                  <div className='board-row' key={rowIdx}>\n                    {row.map((cell, colIdx) => {\n                      return (\n                        <div\n                          className={`cell${cell.open ? (cell.mine ? ' exploded' : ' open') : holdLeft ? ' hover' : ''}${\n                            cell.highlighted ? ' highlighted' : ''\n                          }`}\n                          id={`${String(rowIdx).padStart(2, '0')}${String(colIdx).padStart(2, '0')}`}\n                          cellpos={`[${rowIdx},${colIdx}]`}\n                          key={`${rowIdx},${colIdx}`}>\n                          {cell.open ? (\n                            cell.mine ? (\n                              'X'\n                            ) : (\n                              `${cell.neighborMines}`\n                            )\n                          ) : cell.flag % 3 === 1 ? (\n                            <img alt='flag' src='icons/flag.svg' className='cell icon' cellpos={`[${rowIdx},${colIdx}]`} />\n                          ) : // 'f'\n                          cell.flag % 3 === 2 ? (\n                            '?'\n                          ) : null}\n                        </div>\n                      )\n                    })}\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Minesweeper\n","import React from 'react'\nimport { Menu, Routes } from '../components'\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className='app'>\n        <Menu />\n        <Routes />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/App'\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}